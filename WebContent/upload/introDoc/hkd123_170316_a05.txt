/*
	lpad/rpad 함수
	특정 문자열에 해당하는 문자열을 채우는 처리
	lpad : 왼쪽 문자로 채움/ rpad : 오른쪽 문자로 채움
		ex) lpad(data,반복한 문자 갯수,'반복한 문자열');
		ex2) # himan이라는 문자열 왼쪽에 '#'로 20글자로 채워서 출력
		
	실무 migration varchar : 가변 문자형, char : 고정 문자형
	가변문자형의 data를 고정 문자형으로 전환하여 이동시킬 때 활용!
*/
select lpad('himan', 20, '#') from dual;								-- himan이 5글자기 때문에 #은 15개 나온다.
select rpad('good job', 20, '@') from dual;
-- 예제. ename과 job을 크기와 지정된 문자열만큼 오른쪽과 왼쪽에 해당 문자열을 하래 형식으로 작성
--		1. ename과 job에서 data 크키를 확인한다.
--		2. data 중 가장 큰 data의 크키를 확인해서 ename에는 오른쪽에 @, job에는 왼쪽에 ^를 추가해서 나타나게 한다.
--		3. 다음과 같은 순서로 출력  => 사번 이름(@) 직책(^) 입사일
select max(length(ename)), max(length(job)) from emp;
-- max(lengthb(ename)), max(lengthb(job)) : 최대값 한 줄 나오는 거라서 여러줄 나오는 거랑 같이 쓰면 안된다.
select empno, rpad(ename, 6, '@'), lpad(job, 9, '^'), hiredate from emp;

/*
	ltrim(), rtrim()
	공백의 문자를 삭제하는 함수
	ltrim : 왼쪽에 공백문자를 삭제하는 처리
	rtrim : 오른쪽에 공백문자를 삭제하는 처리
		ex) [공백]This is yours.의 왼쪽 공백 제거
*/
select length('         this is your..'),ltrim('         this is your..'),
		length(ltrim('         this is your..'))
from dual;
select 'what?                               ', length('what?                               '),
rtrim('what?                               '), length(rtrim('what?                               '))
from dual;

/*
	trim : 오른쪽 왼쪽에 있는 공백을 비롯한 특정 문자열 제거
		ex) trim('삭제할 문자열' from data)
		ex2) trim('a' from 'aaaaaaaaaaaaaaaaaaaaaaaHello!aaaaaaaaaaaaa');
*/
select trim('a' from 'aaaaaaaaaaaaaaaaaaaaaaaHello!aaaaaaaaaaaaa') from dual;
select trim('a' from 'aaaaaaaaaaaaaaaaaaaaaaaHealalo!aaaaaaaaaaaaa') from dual;			-- 가운데 껴있는 건 안된다.
-- 예제. job에 'MAN'이나 'ER', 'ST'가 있으면 삭제된 내용으로 출력
--		이름 직책
select * from emp;
select ename, job, rtrim(job,('N''R''T')) from emp;
select ename, job, trim('T' from trim('R' from trim('N' from job))) from emp;


/*
	날짜 함수
	1. sysdate : 오라클의 내장된 현재 날짜와 시간을 출력하는 객체
	2. months_between : 두 개의 날짜 data 사이의 개월 수를 구함
		ex) months_between(data01, data02)
	3. add_months : 미래 시점을 나타내는 함수로 개월 수를 더해서 해당 날짜가 나타나게 한다.
		ex) add_months(기준data, 이후 개월수);
		ex2) 입사 날짜에서 6개월을 더해보자!
	4. next_day : 주간단위로 가장 가까운 날짜를 산출할 때, 활용
		ex) next_day(날짜 data, '요일') : 해당 요일에 가장 가까운 날짜 출력
	5. last_day : **Calender 만들 때 많이 사용되는 기능!!! 해당 달의 마지막 날짜를 반환처리
		ex) last_day(data)
*/

select sysdate from dual;
select sysdate+1 from dual;							-- 날짜(일)가 바뀐다
select sysdate-1 from dual;
select sysdate today, sysdate-1 yesterday, sysdate+1 tomorrow from dual;
select ename, hiredate, sysdate, floor(sysdate - hiredate) WorkingDay from emp;	-- 뺀 값은 일 수 가 나온다.

select months_between(sysdate, hiredate) from emp;		-- 얘도 소수점 나옴

select ename, hiredate, add_months(hiredate, 6) from emp;

select sysdate, next_day(sysdate,'수요일') from dual;
-- 수요일이 지났기때문에 다음주 수요일이 출력됨
-- 예제. 사원들의 입사 후 첫번째 토요일을 출력
select hiredate "Hiredate", next_day(hiredate,'토요일') "First Saturday" from emp;

select last_day(sysdate) from dual;
select last_day(sysdate)-10 from dual;
-- 급여 계산.. 3단계 급여일을 나누어서 출력
-- 1단계 당월 20일
-- 2단계 당월 마지막날
-- 3단계 다음달 10일
-- 사원 입사일 첫월급1 첫월급2 첫월급3
select ename, hiredate, last_day(add_months(sysdate,-1))+20 "첫월급1",
		last_day(sysdate) "첫월급2",
		last_day(sysdate)+10 "첫월급3"
	from emp;


/*
	형변환 함수
	오라클에서 data간 형변환을 해서, 필요한 형식이나 type으로 나타내야 한다.
	이때, 활요하는 것이 형변환 함수이다.
	
	1. to_char(data) : 날짜나 숫자형을 문자형으로 변환
		ex) to char(날짜data, '표현할 문자형태')
		- 문자형태 : YYYY, YY, MM, MON(영문으로 달표시), DAY(요일), DY(요일 약어), DD
					시간 : AM, PM(오전 오후 표식), HH(=HH12)(12시간 표시), HH24(24시간 표시), MI, SS
		ex2) to_char(data, '형식')
		- 숫자형태 : 0(자릿수가 많지 않은경우, 지정된 자리수가 실제보다 큰경우 0이 채워짐)
					9 : 자리수 상관없이 data 나타남. 채워지지X
					L : 지역별 현금단위 표시
					. : 소수점 / , : 천단위
		
	2. to_date(data) : 문자형을 날짜형으로 변환
		입력한 날짜형의 문자를 입력할 때, 날짜 data를 조회 처리
		검색을 하려면 문자를 날짜로 변환하여 처리
		문자는 날짜형태로 어떻게 인식하는가
		ex) 1980/12/12 => to_date()에서 어떤 형식으로 입력할 것인지 지정.
			to_date(입력data, '형식을 지정')
		ex2) to_date('19811020','YYYY/MM/DD')
			 select * from emp where hiredate = '12/17/1980'; (X)
			
	3. to_number(data) : 문자형을 숫자형으로 변환
		ex) to_number(입력할 data, '형식지정')
		
*/
-- 입사일을 년도 월 일로 표현
select to_char(hiredate,'YYYY-MON-DD-DAY-AM-HH-MI-SS') from emp;
select to_char(hiredate,'YY/MM/DD/DY') from emp;
select to_char(hiredate,'YYYY"년 "MON DD"일" DAY') from emp;
-- 한글은 특수문자라 "" 사이에..
-- 예제. [사원이름]은 @@년 @@월 @@일에 급여를 @@@만원 받기로 했습니다.
select '[ '||ename||' ]은 '||to_char(hiredate,'YY"년 "MON DD"일에 급여를 "')||sal||'만원 받기로 했습니다.'
	show
from emp;
select to_char(sysdate, 'YYYY/MM/DD/DY HH24:MI:SS') from dual;

select to_char(1234,'00000000') from dual;		-- 0
select to_char(1234,'99999999') from dual;		-- 공백
select to_char(12345,'L99999') from dual;		-- 원 표시 등장
select to_char(1234,'99') from dual;			-- 자리구가 적으면 ### 표시 등장
select to_char(12345,'L99,999') from dual;		-- 천단위 표시
select to_char(123.456789,'999.999') from dual;	-- 소수점단위 표시
-- 예제. 이름과 급여를 표시하되 급여는 소수점 이하는 표시하지 않고, 7자리로 표시하고 나타나니 않는 사리는 0을 넣는다
select ename, to_char(sal, '0,000,000') from emp;


select * from emp where hiredate=to_date('1980/12/17','YYYY/MM/DD');
-- 예제. 입력값이 '1981-02-20'이며, 이 data로 검색되는 입사일에 해당하는
--		사원명 입사일(1981 02 20)을 출력
select ename, to_char(hiredate,'YYYY"년 "MON DD"일"') from emp where hiredate=to_date('1981-02-20','YYYY/MM/DD');


select to_number('20,000','99,999') - to_number('30,000','99,999') from dual;
-- 연봉을 검색하려 할때, '3,000' 이라는 입력값을 통해 3000 이하의 연봉을 가진 사람의 이름과 연봉을 W 표시 하라!
select ename, to_char((sal*0)+3000,'L9,999') from emp where sal <= to_number('3,000','9,999');

-- 연봉과 보너스를 합산한 금액을 이름과 총액으로 출력
select ename, sal, comm, sal+nvl(comm,0) from emp;
/*
	nvl : 해당 data가 null 일때, 표현할 default data를 지정하여 값이 없을때도 정상적으로 data를 처리하기 위해 사용
		nvl(data, 0)  => 0
		nvl(data, ' ')  => 공백
*/


/*
	과제 1.
	6개월의 인턴기간에는 급여의 70%만 지급하기로 했다.
	사원의 인턴기간 만료시점을 출력하고, 6개월간의 급여의 총합을 출력
	월급여 = sal/13	/ 인턴기간 - 월급여의 70%	/ 인턴급여총액 - 6개월간 급여의 합을 10단위로 절삭처리
	사원번호, 이름, 입사일, 인턴 만료시점, 인턴 급여총객
	
	과제 2.
	근무 개월수에 따른 보너스 차등지급
	1/3 30%, 1/3 20%, 1/3 10% 오래했을수록 높음
	사원 입사일 현재날짜(@@/@@/@@ AM @@시 @@분 @@초) 근무개월수 보너스 
	
	과제 3.
	조회값이 1981년 1월 1일부터 1982년 12월 12일 사이의 data 중, 부서가 30인 data를 조회하여,
	사원명(10자리-앞에 #기호처리) 직책(10자리-나머지 뒤 -처리) 입사일(@@년 @@월 @@일 @요일 24시분초) 연봉(####1,600.0)로 출력
	
	과제 4.
	이름 관리자번호 보너스
	data가 없을시는 => 관리자 번호의 경우 '최고레벨', 보너스는 '0'으로 표시
*/