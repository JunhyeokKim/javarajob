-- 컬럼명에 이름(별명) 붙이기!!
-- 굉장히 중요한 부분이다!!!!!!
select * from emp;
-- empno를 별칭으로 companyNo로 교체
-- 컬럼명 as 나타낼 별칭컬럼명 alias
select empno as companyNo from emp;
select companyNo from emp;							-- 얘는 안된다!!! 별칭이라서 그런가..
/*
	별칭은 프로그램 영역에서 중요한 의미를 갖는다.
	대다숭 프로그램은 별칭으로 간편하게 사용하는 경우가 많다.
	ex) rs.getString("별칭/컬럼명");					-- 저 위에 애는 안되는데, 다른 곳에서는 되나부다..
*/
-- as 대신에 공백을 사용할 수 있다!!!!
select '사번은 '||empno||' 입니다.' as 사번목록 from emp;			-- 한글도 된다!
-- 실제 application에서는 rs.getString("show")로 처리된다.
select * from emp;
/*
	컬럼명		: depandname		upgradeRatio	enterCompany
	출력 data	: (부서번호)	이름		연봉의 10%		입사년월일
*/
select '('||deptno||')'|| ename depandname, 0.1*sal as upgradeRatio, hiredate enterCompany from emp;
-- 부서번호와 이름이 혼합됨.. 이거 잘 알아두자!
-- 공백값을 별칭으로 처리. "" 사이에 별칭명을 적어준다!
select ename "name intro" from emp;
-- 한글을 별칭으로 처리할 때도, ""사이에 처리  // 이건 안해도 됐는데...?
select ename "특수문자?!@#!$$%^된다!" from emp;
select * from emp;
/*
	중복값 처리 : database에서는 동일한 값을 입력하는 것을 table 단위로 입력하는 것을 꺼려한다.
	컬럼에 있는 모든 data가 동일해서는 안된다는 말.
	but, 한 개 컬럼으로 조회할 때는 동일한 data가 나타날 수 있다.
*/
select deptno from emp;
/*
	일 때, 하나 또는 다수의 컬럼의 data가 동일한 것을 filtering 해주는 처리가 있는데, 이를 distinct라고 한다.
	활용형식 select distinct 컬럼1, 컬럼2 .. form table
*/
select distinct deptno from emp;					-- 동일한 data는 사라짐
select * from emp;
-- 문제. -mgr을 동일값 없이 출력
-- 문제. job과 mgr이 동일값 없이 출력
select * from emp;
select distinct mgr from emp;
select distinct job, mgr from emp;

/*
	조건처리
	특정한 data list내용에서 필요한 data한 행단위로 filtering하는 것.
	1. 범위처리
*/
-- 연봉이 3000 이상인 data를 list 처리
-- where 컬럼명 > 조건 data
select * from emp where sal >= 3000;
-- database에서 쓰이는 비교연산자
-- =(=기호 하나) , >, <, >=, <=, <>,!=(다를때)
/*	문제. 부서번호가 30인 data
	문제. 연봉이 1000 미만인 data
	문제. 이름이 smith인 data
	문제. comm이 null인 data
	문제. mgr이 7698인 data	
*/
select *from emp where deptno = 30;
select *from emp where sal < 1000;
select *from emp where ename = 'SMITH';						-- 문자는 작은 따옴표
select *from emp where nvl(comm,0) = 0;						-- where comm is null 도 있다!(반대 is not null)
select *from emp where mgr != 7698;

/*
	열과 행의 두가지 조건을 갖춘 data list
	행의 multi 조건에 대한 처리
*/
select * from emp;
-- 연봉이 3000 이상인 사람의 이름과 연봉 보기..
select ename, sal from emp where sal >= 3000;
select * from emp;
-- 연봉이 2000 이하, 직책이 SALESMAN인 사람의 이름, 직책 연봉 list
select ename "이름", job "직책", sal "연봉" from emp where sal <=2000 and job = 'SALESMAN';
-- 컬럼명은 대소문자를 구분 X, but data는 대소문자를 구분함

-- 연습예제
-- 1. emp 중에 급여가 2000 미만이 되는 사원 정보 중에 사번과 급여를 출력
-- 2. 연봉과 보너스의 합산 금액이 1500미만인 사람의 이름, 연봉, 보너스, 합산액을 출력
-- 3. mgr이 null인 사람의 job과 이름 연봉을 출력
-- 4. job이 clerk인 사람 중 deptno가 30인 사람의 이름 직책 부서번호 출력
-- 5. 연봉이 2000에서 3000 사이에 있는 사람의 부서번호 이름 연봉 출력

select empno "사번", sal "급여" from emp where sal < 2000;
select ename "이름", sal "연봉", comm "보너스", sal+nvl(comm,0) "합산액" from emp where sal+nvl(comm,0) < 1500;
select job "직책", ename "이름", sal "연봉" from emp where mgr is null;
select ename "이름", job "직책", deptno "부서번호" from emp where job = 'CLERK' and deptno = 30;
select deptno "부서번호", ename "이름", sal "연봉" from emp where sal <=3000 and sal >=2000;