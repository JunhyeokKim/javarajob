<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 
	namespace, id : 해당 interface 불러와 연결하는
		namespace : 공통부분
		id : 해당 interface 이름
	parameterType : 
		해당 interface의 input의 정의되어 있는 경우 
		mybatis.Spring.xml에서 정의한 DTO Alias 이용
	resultType : 
		해당 interface의 return 값이 정의되어 있는 경우, return값이 단위객체인 경우
		mybatis.Spring.xml에서 정의한 DTO Alias 이용
	resultMap : 
		해당 interface의 return 값이 정의되어 있는 경우, return값이 리스트객체인 경우
		type : 리스트단위, mybatis.Spring.xml에서 정의한 DTO Alias 이용
		id : 정의된 리스트객체의 alias
-->
<mapper namespace="javarajob.repository.AccountDao">
	<resultMap type="mem" id="memResult"/>	
	<insert id="insertMember" parameterType="mem">
		insert into ACCOUNT values(#{name},#{id},#{password},#{email},#{phone},#{address},#{interest},sysdate)
	</insert>
	<select id="listMember" resultMap="memResult">
		select * from ACCOUNT
		where 1=1
		<if test="id!=null and id!=''">
			and id like '%' || #{id} || '%'
		</if>
		<if test="name!=null and name!=''">
			and name like '%' || #{name} || '%'
		</if>
		<if test="phone!=null and phone!=''">
			and phone like '%' || #{phone} || '%'
		</if>
		<if test="email!=null and email!=''">
			and email like '%' || #{email} || '%'
		</if>
		order by sysdate desc
	</select>
	<select id="getMember" parameterType="String" resultType="mem">
		select * from ACCOUNT 
		where id = #{id}
	</select>
	<delete id="deleteMember" parameterType="String">
		DELETE FROM ACCOUNT WHERE ID=#{id}
	</delete>
	<update id="updateMember" parameterType="mem">
		update account set password=#{password}, email=#{email}, phone=#{phone}, address=#{address}, interest=#{interest} where id=#{id}
	</update>
	
		
		
</mapper>